{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tbright/Documents/Personal/FirstCursorProject/nextjs-supabase-project/src/utils/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/tbright/Documents/Personal/FirstCursorProject/nextjs-supabase-project/src/app/admin-uploads/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/utils/supabaseClient';\n\ntype Presentation = {\n  id: string;\n  title: string;\n  speaker_name: string;\n  scheduled_time: string;\n  room: string;\n  file_url: string | null;\n};\n\ntype LogEntry = {\n  id: string;\n  action: string;\n  presentation_id: string;\n  user_name: string;\n  details: any;\n  created_at: string;\n};\n\nexport default function AdminUploadsPage() {\n  const [presentations, setPresentations] = useState<Presentation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [logEntries, setLogEntries] = useState<LogEntry[]>([]);\n\n  useEffect(() => {\n    async function fetchPresentations() {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('presentations')\n        .select('id, title, speaker_name, scheduled_time, room, file_url');\n      if (data) setPresentations(data);\n      setLoading(false);\n    }\n    fetchPresentations();\n  }, []);\n\n  useEffect(() => {\n    async function fetchLog() {\n      const { data } = await supabase\n        .from('audit_log')\n        .select('*')\n        .order('created_at', { ascending: false })\n        .limit(10);\n      setLogEntries(data || []);\n    }\n    fetchLog();\n  }, []);\n\n  const uploaded = presentations.filter(p => !!p.file_url);\n  const notUploaded = presentations.filter(p => !p.file_url);\n\n  return (\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\n      <div className=\"bg-white rounded-lg shadow p-4 mb-8\">\n        <h2 className=\"text-xl font-bold mb-2 text-gray-900\">Recent Changes</h2>\n        {logEntries.length === 0 ? (\n          <div className=\"text-gray-700\">No recent changes.</div>\n        ) : (\n          <ul>\n            {logEntries.map(log => (\n              <li key={log.id} className=\"mb-2 text-gray-900\">\n                <span className=\"font-semibold\">{log.user_name || 'Unknown user'}</span> \n                {' '}performed <span className=\"font-semibold\">{log.action}</span> \n                {' '}on presentation <span className=\"font-mono\">{log.presentation_id}</span>\n                {' '}at {new Date(log.created_at).toLocaleString()}\n                {log.details && (\n                  <div className=\"text-xs text-gray-600\">\n                    Details: {JSON.stringify(log.details)}\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <h1 className=\"text-2xl font-bold mb-6 text-gray-900\">Presentation Upload Status</h1>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <h2 className=\"text-xl font-semibold mb-2 text-green-700\">Uploaded ({uploaded.length})</h2>\n            {uploaded.length === 0 ? (\n              <div className=\"text-gray-700\">No presentations uploaded yet.</div>\n            ) : (\n              <ul>\n                {uploaded.map(p => (\n                  <li key={p.id} className=\"mb-2\">\n                    <span className=\"font-semibold text-gray-900\">{p.title}</span> by {p.speaker_name}\n                    <br />\n                    <span className=\"text-sm text-gray-600\">\n                      {new Date(p.scheduled_time).toLocaleString()} in {p.room}\n                    </span>\n                    <br />\n                    <a\n                      href={p.file_url!}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-700 underline\"\n                    >\n                      View File\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <h2 className=\"text-xl font-semibold mb-2 text-red-700\">Not Uploaded ({notUploaded.length})</h2>\n            {notUploaded.length === 0 ? (\n              <div className=\"text-gray-700\">All presentations have files uploaded!</div>\n            ) : (\n              <ul>\n                {notUploaded.map(p => (\n                  <li key={p.id} className=\"mb-2\">\n                    <span className=\"font-semibold text-gray-900\">{p.title}</span> by {p.speaker_name}\n                    <br />\n                    <span className=\"text-sm text-gray-600\">\n                      {new Date(p.scheduled_time).toLocaleString()} in {p.room}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAuBe,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAE3D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,eAAe;gBACb,WAAW;gBACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,iIAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,iBACL,MAAM,CAAC;gBACV,IAAI,MAAM,iBAAiB;gBAC3B,WAAW;YACb;YACA;QACF;qCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,eAAe;gBACb,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,iIAAA,CAAA,WAAQ,CAC5B,IAAI,CAAC,aACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;oBAAE,WAAW;gBAAM,GACvC,KAAK,CAAC;gBACT,cAAc,QAAQ,EAAE;YAC1B;YACA;QACF;qCAAG,EAAE;IAEL,MAAM,WAAW,cAAc,MAAM,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,QAAQ;IACvD,MAAM,cAAc,cAAc,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,QAAQ;IAEzD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAuC;;;;;;oBACpD,WAAW,MAAM,KAAK,kBACrB,6LAAC;wBAAI,WAAU;kCAAgB;;;;;6CAE/B,6LAAC;kCACE,WAAW,GAAG,CAAC,CAAA,oBACd,6LAAC;gCAAgB,WAAU;;kDACzB,6LAAC;wCAAK,WAAU;kDAAiB,IAAI,SAAS,IAAI;;;;;;oCACjD;oCAAI;kDAAU,6LAAC;wCAAK,WAAU;kDAAiB,IAAI,MAAM;;;;;;oCACzD;oCAAI;kDAAgB,6LAAC;wCAAK,WAAU;kDAAa,IAAI,eAAe;;;;;;oCACpE;oCAAI;oCAAI,IAAI,KAAK,IAAI,UAAU,EAAE,cAAc;oCAC/C,IAAI,OAAO,kBACV,6LAAC;wCAAI,WAAU;;4CAAwB;4CAC3B,KAAK,SAAS,CAAC,IAAI,OAAO;;;;;;;;+BAPjC,IAAI,EAAE;;;;;;;;;;;;;;;;0BAevB,6LAAC;gBAAG,WAAU;0BAAwC;;;;;;YACrD,wBACC,6LAAC;0BAAI;;;;;qCAEL,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;;oCAA4C;oCAAW,SAAS,MAAM;oCAAC;;;;;;;4BACpF,SAAS,MAAM,KAAK,kBACnB,6LAAC;gCAAI,WAAU;0CAAgB;;;;;qDAE/B,6LAAC;0CACE,SAAS,GAAG,CAAC,CAAA,kBACZ,6LAAC;wCAAc,WAAU;;0DACvB,6LAAC;gDAAK,WAAU;0DAA+B,EAAE,KAAK;;;;;;4CAAQ;4CAAK,EAAE,YAAY;0DACjF,6LAAC;;;;;0DACD,6LAAC;gDAAK,WAAU;;oDACb,IAAI,KAAK,EAAE,cAAc,EAAE,cAAc;oDAAG;oDAAK,EAAE,IAAI;;;;;;;0DAE1D,6LAAC;;;;;0DACD,6LAAC;gDACC,MAAM,EAAE,QAAQ;gDAChB,QAAO;gDACP,KAAI;gDACJ,WAAU;0DACX;;;;;;;uCAZM,EAAE,EAAE;;;;;;;;;;;;;;;;kCAoBrB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;;oCAA0C;oCAAe,YAAY,MAAM;oCAAC;;;;;;;4BACzF,YAAY,MAAM,KAAK,kBACtB,6LAAC;gCAAI,WAAU;0CAAgB;;;;;qDAE/B,6LAAC;0CACE,YAAY,GAAG,CAAC,CAAA,kBACf,6LAAC;wCAAc,WAAU;;0DACvB,6LAAC;gDAAK,WAAU;0DAA+B,EAAE,KAAK;;;;;;4CAAQ;4CAAK,EAAE,YAAY;0DACjF,6LAAC;;;;;0DACD,6LAAC;gDAAK,WAAU;;oDACb,IAAI,KAAK,EAAE,cAAc,EAAE,cAAc;oDAAG;oDAAK,EAAE,IAAI;;;;;;;;uCAJnD,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAe/B;GA9GwB;KAAA","debugId":null}}]
}