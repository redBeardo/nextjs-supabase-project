{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tbright/Documents/Personal/FirstCursorProject/nextjs-supabase-project/src/utils/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/tbright/Documents/Personal/FirstCursorProject/nextjs-supabase-project/src/app/speaker-upload/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { supabase } from '@/utils/supabaseClient';\n\nexport default function SpeakerUploadPage() {\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState<any[]>([]);\n  const [selected, setSelected] = useState<any | null>(null);\n  const [file, setFile] = useState<File | null>(null);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  async function handleSearch(e: React.FormEvent) {\n    e.preventDefault();\n    setMessage('');\n    const { data, error } = await supabase\n      .from('presentations')\n      .select('*')\n      .ilike('speaker_name', `%${search}%`);\n    if (error) setMessage(error.message);\n    else setResults(data || []);\n  }\n\n  async function handleUpload() {\n    if (!file || !selected) return;\n    setUploading(true);\n    setMessage('');\n    // Upload file to Supabase Storage\n    const { data, error } = await supabase.storage\n      .from('presentations')\n      .upload(`pptx/${selected.id}_${file.name}`, file, { upsert: true });\n    if (error) {\n      setMessage('Upload failed: ' + error.message);\n      setUploading(false);\n      return;\n    }\n    // Get public URL\n    const { data: publicUrlData } = supabase.storage\n      .from('presentations')\n      .getPublicUrl(data.path);\n    // Update presentation record\n    const { error: updateError } = await supabase\n      .from('presentations')\n      .update({ file_url: publicUrlData.publicUrl })\n      .eq('id', selected.id);\n    if (updateError) setMessage('Database update failed: ' + updateError.message);\n    else setMessage('Upload successful!');\n    setUploading(false);\n    setFile(null);\n    setSelected(null);\n    setResults([]);\n    setSearch('');\n  }\n\n  return (\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\n      <h1 className=\"text-2xl font-bold mb-4 text-gray-900\">Speaker File Upload</h1>\n      <form onSubmit={handleSearch} className=\"mb-4 flex gap-2\">\n        <input\n          className=\"border border-gray-300 rounded px-3 py-2 w-64 text-gray-900\"\n          placeholder=\"Enter your name\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n          required\n        />\n        <button className=\"bg-blue-700 text-white px-4 py-2 rounded\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {results.length > 0 && (\n        <div className=\"mb-4 bg-white rounded-lg shadow p-4\">\n          <h2 className=\"font-semibold mb-2 text-gray-900\">Select Your Talk</h2>\n          <ul>\n            {results.map(r => (\n              <li key={r.id} className=\"mb-2\">\n                <button\n                  className=\"text-blue-700 underline\"\n                  onClick={() => setSelected(r)}\n                >\n                  {r.title} ({r.scheduled_time}) in {r.room}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {selected && (\n        <div className=\"mb-4 bg-white rounded-lg shadow p-4\">\n          <h2 className=\"font-semibold mb-2 text-gray-900\">Upload for: {selected.title}</h2>\n          <label className=\"flex items-center cursor-pointer bg-blue-700 hover:bg-blue-800 text-white px-4 py-2 rounded w-fit\">\n            <span>Select PPTX File</span>\n            <input\n              type=\"file\"\n              accept=\".ppt,.pptx,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n              onChange={e => setFile(e.target.files?.[0] || null)}\n              className=\"hidden\"\n            />\n          </label>\n          {file && (\n            <div className=\"mt-2 text-gray-900 font-medium\">\n              Selected: {file.name}\n            </div>\n          )}\n          <button\n            className=\"mt-2 bg-green-700 text-white px-4 py-2 rounded\"\n            onClick={handleUpload}\n            disabled={uploading || !file}\n          >\n            {uploading ? 'Uploading...' : 'Upload'}\n          </button>\n        </div>\n      )}\n      {message && <div className=\"mt-4 text-gray-900\">{message}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAChD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;IACrD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,eAAe,aAAa,CAAkB;QAC5C,EAAE,cAAc;QAChB,WAAW;QACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,iIAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACtC,IAAI,OAAO,WAAW,MAAM,OAAO;aAC9B,WAAW,QAAQ,EAAE;IAC5B;IAEA,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,UAAU;QACxB,aAAa;QACb,WAAW;QACX,kCAAkC;QAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,iIAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,iBACL,MAAM,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,EAAE,EAAE,MAAM;YAAE,QAAQ;QAAK;QACnE,IAAI,OAAO;YACT,WAAW,oBAAoB,MAAM,OAAO;YAC5C,aAAa;YACb;QACF;QACA,iBAAiB;QACjB,MAAM,EAAE,MAAM,aAAa,EAAE,GAAG,iIAAA,CAAA,WAAQ,CAAC,OAAO,CAC7C,IAAI,CAAC,iBACL,YAAY,CAAC,KAAK,IAAI;QACzB,6BAA6B;QAC7B,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,iIAAA,CAAA,WAAQ,CAC1C,IAAI,CAAC,iBACL,MAAM,CAAC;YAAE,UAAU,cAAc,SAAS;QAAC,GAC3C,EAAE,CAAC,MAAM,SAAS,EAAE;QACvB,IAAI,aAAa,WAAW,6BAA6B,YAAY,OAAO;aACvE,WAAW;QAChB,aAAa;QACb,QAAQ;QACR,YAAY;QACZ,WAAW,EAAE;QACb,UAAU;IACZ;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAwC;;;;;;0BACtD,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAA,IAAK,UAAU,EAAE,MAAM,CAAC,KAAK;wBACvC,QAAQ;;;;;;kCAEV,6LAAC;wBAAO,WAAU;wBAA2C,MAAK;kCAAS;;;;;;;;;;;;YAI5E,QAAQ,MAAM,GAAG,mBAChB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;kCACE,QAAQ,GAAG,CAAC,CAAA,kBACX,6LAAC;gCAAc,WAAU;0CACvB,cAAA,6LAAC;oCACC,WAAU;oCACV,SAAS,IAAM,YAAY;;wCAE1B,EAAE,KAAK;wCAAC;wCAAG,EAAE,cAAc;wCAAC;wCAAM,EAAE,IAAI;;;;;;;+BALpC,EAAE,EAAE;;;;;;;;;;;;;;;;YAYpB,0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;;4BAAmC;4BAAa,SAAS,KAAK;;;;;;;kCAC5E,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;0CAAK;;;;;;0CACN,6LAAC;gCACC,MAAK;gCACL,QAAO;gCACP,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;gCAC9C,WAAU;;;;;;;;;;;;oBAGb,sBACC,6LAAC;wBAAI,WAAU;;4BAAiC;4BACnC,KAAK,IAAI;;;;;;;kCAGxB,6LAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU,aAAa,CAAC;kCAEvB,YAAY,iBAAiB;;;;;;;;;;;;YAInC,yBAAW,6LAAC;gBAAI,WAAU;0BAAsB;;;;;;;;;;;;AAGvD;GA/GwB;KAAA","debugId":null}}]
}